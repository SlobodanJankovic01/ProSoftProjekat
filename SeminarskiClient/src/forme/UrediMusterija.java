/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domain.Mesto;
import domain.Musterija;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import kontroler.Kontroler;
import modeliTabela.TabelProizvodiModel;
import niti.NitPopuniCboxMesta;

/**
 *
 * @author Slobodan
 */
public class UrediMusterija extends javax.swing.JFrame {

    /**
     * Creates new form UrediMusterija
     */
    public UrediMusterija() {
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        popuniTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnIzmeniMusteriju = new javax.swing.JButton();
        txtBrTelefona = new javax.swing.JTextField();
        btnIzaberiMusteriju = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSveMusterije = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cboxMesto = new javax.swing.JComboBox<>();
        brnKreirajMesto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Uredi musteriju");
        setAlwaysOnTop(true);

        jButton1.setText("Osvezi tabelu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Broj telefona:");

        btnIzmeniMusteriju.setText("Izmeni");
        btnIzmeniMusteriju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniMusterijuActionPerformed(evt);
            }
        });

        btnIzaberiMusteriju.setText("Izaberi musteriju");
        btnIzaberiMusteriju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiMusterijuActionPerformed(evt);
            }
        });

        jLabel1.setText("Id:");

        tblSveMusterije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblSveMusterije);

        jLabel2.setText("Ime:");

        jLabel3.setText("Prezime:");

        lblID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel5.setText("Mesto:");

        brnKreirajMesto.setText("Kreiraj mesto");
        brnKreirajMesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnKreirajMestoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnIzaberiMusteriju))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnIzmeniMusteriju)
                        .addGap(111, 111, 111))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPrezime, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtIme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboxMesto, 0, 126, Short.MAX_VALUE)
                                    .addComponent(txtBrTelefona))))
                        .addGap(16, 16, 16)
                        .addComponent(brnKreirajMesto)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzaberiMusteriju)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtBrTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboxMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brnKreirajMesto))
                .addGap(28, 28, 28)
                .addComponent(btnIzmeniMusteriju)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        popuniTabelu();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnIzmeniMusterijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniMusterijuActionPerformed

        try {

            if (lblID.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Nije izabrana musterija");
                return;
            }
            Mesto mesto = (Mesto) cboxMesto.getSelectedItem();

            Musterija m = new Musterija(Integer.valueOf(lblID.getText()), txtIme.getText(), txtPrezime.getText(),
                    txtBrTelefona.getText(), mesto.getIdMesto());

            Kontroler.getInstance().promeniMusterija(m);

            JOptionPane.showMessageDialog(this, "Uspesno izmenjena musterija");

            popuniTabelu();

            lblID.setText("");
            txtIme.setText("");
            txtPrezime.setText("");
            txtBrTelefona.setText("");
            cboxMesto.removeAllItems();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspela promena musterije");
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnIzmeniMusterijuActionPerformed

    private void btnIzaberiMusterijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiMusterijuActionPerformed

        try {

            if (tblSveMusterije.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Nije izabrana musterija iz tabele");
                return;
            }

            int red = tblSveMusterije.getSelectedRow();
            int idMusterija = (int) tblSveMusterije.getValueAt(red, 0);

            List<Musterija> sveMusterije = new ArrayList<>();

            try {
                sveMusterije = Kontroler.getInstance().vratiListuSviMusterija();
            } catch (Exception ex) {
                System.out.println("Greska pri ucitavanju liste radnih smena" + ex.getMessage());
            }

            Musterija izabranaMusterija = null;

            for (Musterija m : sveMusterije) {
                if (m.getIdMusterija() == idMusterija) {
                    izabranaMusterija = m;
                }
            }

            lblID.setText(String.valueOf(izabranaMusterija.getIdMusterija()));
            txtIme.setText(izabranaMusterija.getIme());
            txtPrezime.setText(izabranaMusterija.getPrezime());
            txtBrTelefona.setText(izabranaMusterija.getBrojTelefona());

            List<Mesto> mesta = Kontroler.getInstance().vratiListuSviMesta();

            cboxMesto.removeAllItems();

            for (Mesto mesto : mesta) {
                cboxMesto.addItem(mesto);
            }

            for (int i = 0; i < cboxMesto.getItemCount(); i++) {
                Mesto mesto = (Mesto) cboxMesto.getItemAt(i);
                if (mesto.getIdMesto() == izabranaMusterija.getIdMesto()) {
                    cboxMesto.setSelectedItem(mesto);
                    break;
                }
            }

        } catch (Exception ex) {
            System.out.println("Greska kod popunjavanja combo boxa mesta" + ex.getMessage());
        }


    }//GEN-LAST:event_btnIzaberiMusterijuActionPerformed

    private void brnKreirajMestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnKreirajMestoActionPerformed

        try {
            KreirajMesto kmm = new KreirajMesto(this, true);

            List<Mesto> mesta = Kontroler.getInstance().vratiListuSviMesta();

            cboxMesto.removeAllItems();

            for (Mesto mesto : mesta) {
                cboxMesto.addItem(mesto);
            }
        } catch (Exception ex) {
            Logger.getLogger(UrediMusterija.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_brnKreirajMestoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UrediMusterija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UrediMusterija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UrediMusterija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UrediMusterija.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UrediMusterija().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnKreirajMesto;
    private javax.swing.JButton btnIzaberiMusteriju;
    private javax.swing.JButton btnIzmeniMusteriju;
    private javax.swing.JComboBox<Mesto> cboxMesto;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JTable tblSveMusterije;
    private javax.swing.JTextField txtBrTelefona;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        String[] kolone = {"Id", "Ime", "Prezime", "Br. telefona", "Mesto"};
        TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

        // Postavljanje modela na tabelu
        tblSveMusterije.setModel(dt);

        List<Musterija> sveMusterije;

        try {
            sveMusterije = Kontroler.getInstance().vratiListuSviMusterija();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju musterija " + ex.getMessage());
            sveMusterije = null;
            return;
        }
        int brojac = 0;

        for (Musterija musterija : sveMusterije) {
            dt.setRowCount(brojac + 1);

            dt.setValueAt(musterija.getIdMusterija(), brojac, 0);
            dt.setValueAt(musterija.getIme(), brojac, 1);
            dt.setValueAt(musterija.getPrezime(), brojac, 2);
            dt.setValueAt(musterija.getBrojTelefona(), brojac, 3);
            dt.setValueAt(vratiMesto(musterija.getIdMesto()), brojac, 4);

            brojac++;
        }

        tblSveMusterije.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblSveMusterije.setRowSelectionAllowed(true);
        tblSveMusterije.setColumnSelectionAllowed(false);
    }

    private String vratiMesto(int idMesto) {

        List<Mesto> svaMesta = new ArrayList<>();

        try {
            svaMesta = Kontroler.getInstance().vratiListuSviMesta();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju mesta" + ex.getMessage());
        }

        for (Mesto mesto : svaMesta) {
            if (mesto.getIdMesto() == idMesto) {
                return mesto.getGrad() + ", " + mesto.getAdresa();
            }
        }
        return null;
    }
}
