/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Dialog.java to edit this template
 */
package forme;

import domain.Mesto;
import domain.Musterija;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import kontroler.Kontroler;
import modeliTabela.TabelProizvodiModel;

/**
 *
 * @author Slobodan
 */
public class ObrisiMusterija extends java.awt.Dialog {

    /**
     * Creates new form ObrisiMusterija
     */
    List<Musterija> sveMusterije;

    public ObrisiMusterija(java.awt.Frame parent, boolean modal) {
        super(parent, "Obrisi musteriju", modal);
        initComponents();

        this.setLocationRelativeTo(null);

        setVisible(true);

        popuniTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSveMusterije = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnObrisi = new javax.swing.JButton();
        btnOsvezi = new javax.swing.JButton();
        btnPretraga = new javax.swing.JButton();
        lblPretraga = new javax.swing.JLabel();
        txtIdMusterije = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        tblSveMusterije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblSveMusterije);

        jLabel1.setText("Izaberi musteriju");

        btnObrisi.setText("Obrisi musteriju");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnOsvezi.setText("Osvezi tabelu");
        btnOsvezi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsveziActionPerformed(evt);
            }
        });

        btnPretraga.setText("Pretraga");
        btnPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretragaActionPerformed(evt);
            }
        });

        lblPretraga.setBackground(new java.awt.Color(255, 0, 0));
        lblPretraga.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Unesi id musterije");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnOsvezi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(19, 19, 19))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtIdMusterije, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addComponent(btnPretraga)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdMusterije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnOsvezi)
                        .addGap(99, 99, 99)
                        .addComponent(btnObrisi))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );

        add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void btnOsveziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsveziActionPerformed
        popuniTabelu();
    }//GEN-LAST:event_btnOsveziActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed

        if (tblSveMusterije.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Nije izabrana musterija iz tabele");
            return;
        }

        int red = tblSveMusterije.getSelectedRow();
        int idMusterija = (int) tblSveMusterije.getValueAt(red, 0);

        try {
            if (Kontroler.getInstance().obrisiMusterija(vratiMusteriju(idMusterija))) {
                JOptionPane.showMessageDialog(this, "Sistem je obrisao musteriju");
                popuniTabelu();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise musteriju");
            System.out.println(ex.getMessage());
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretragaActionPerformed

        if (txtIdMusterije.getText() == "" || !txtIdMusterije.getText().matches("^\\d+$")) {
            lblPretraga.setText("Unesi neki broj");
            lblPretraga.setForeground(Color.RED);
            return;
        }

        lblPretraga.setText("");

        int idMusterije = Integer.parseInt(txtIdMusterije.getText());

        System.out.println(idMusterije);
        popuniTabelu(idMusterije);
    }//GEN-LAST:event_btnPretragaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ObrisiMusterija dialog = new ObrisiMusterija(new java.awt.Frame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOsvezi;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPretraga;
    private javax.swing.JTable tblSveMusterije;
    private javax.swing.JTextField txtIdMusterije;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {

        String[] kolone = {"Id", "Ime", "Prezime", "Br. telefona", "Mesto"};
        TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

        // Postavljanje modela na tabelu
        tblSveMusterije.setModel(dt);

        try {
            sveMusterije = Kontroler.getInstance().vratiListuSviMusterija();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju musterija " + ex.getMessage());
            sveMusterije = null;
            return;
        }
        int brojac = 0;

        for (Musterija musterija : sveMusterije) {
            dt.setRowCount(brojac + 1);

            dt.setValueAt(musterija.getIdMusterija(), brojac, 0);
            dt.setValueAt(musterija.getIme(), brojac, 1);
            dt.setValueAt(musterija.getPrezime(), brojac, 2);
            dt.setValueAt(musterija.getBrojTelefona(), brojac, 3);
            dt.setValueAt(vratiMesto(musterija.getIdMesto()), brojac, 4);

            brojac++;
        }

        tblSveMusterije.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblSveMusterije.setRowSelectionAllowed(true);
        tblSveMusterije.setColumnSelectionAllowed(false);

    }

    private String vratiMesto(int idMesto) {

        List<Mesto> svaMesta = new ArrayList<>();

        try {
            svaMesta = Kontroler.getInstance().vratiListuSviMesta();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju mesta" + ex.getMessage());
        }

        for (Mesto mesto : svaMesta) {
            if (mesto.getIdMesto() == idMesto) {
                return mesto.getGrad() + ", " + mesto.getAdresa();
            }
        }
        return null;
    }

    private void popuniTabelu(int idMusterije) {
        try {

            Musterija m = new Musterija(idMusterije, null, null, null, -1);
            m = Kontroler.getInstance().pretraziMusterija(m);

            if (m.getIme() == null) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje musterije po zadatim kriterijumima");
                return;
            }

            JOptionPane.showMessageDialog(this, "Sistem je nasao musterije po zadatim kriterijumima");

            String[] kolone = {"Id", "Ime", "Prezime", "Br. telefona", "Mesto"};
            TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

            tblSveMusterije.setModel(dt);

            dt.setRowCount(1);

            dt.setValueAt(m.getIdMusterija(), 0, 0);
            dt.setValueAt(m.getIme(), 0, 1);
            dt.setValueAt(m.getPrezime(), 0, 2);
            dt.setValueAt(m.getBrojTelefona(), 0, 3);
            dt.setValueAt(vratiMesto(m.getIdMesto()), 0, 4);

            tblSveMusterije.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tblSveMusterije.setRowSelectionAllowed(true);
            tblSveMusterije.setColumnSelectionAllowed(false);

        } catch (Exception ex) {
            System.out.println("Neuspela pretraga musterija po idiju" + ex.getMessage());
        }
    }

    private Musterija vratiMusteriju(int idMusterija) {
        for (Musterija m : sveMusterije) {
            if (m.getIdMusterija() == idMusterija) {
                return m;
            }
        }
        return null;
    }

}
