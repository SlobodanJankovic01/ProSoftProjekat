/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domain.RadnaSmena;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import kontroler.Kontroler;

/**
 *
 * @author Slobodan
 */
public class UrediRadnaSmena extends javax.swing.JFrame {

    /**
     * Creates new form UrediRadnaSmena
     */
    public UrediRadnaSmena() {
        initComponents();
        setVisible(true);

        setLocationRelativeTo(null);

        popuniTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        btnIzmeniRS = new javax.swing.JButton();
        btnIzaberiRS = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRadneSmene = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        txtVremeOd = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtVremeDo = new javax.swing.JTextField();
        btnPretraga2 = new javax.swing.JButton();
        txtPretraga = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblGreska = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Uredi radnu smenu");

        jButton1.setText("Osvezi tabelu");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnIzmeniRS.setText("Izmeni");
        btnIzmeniRS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniRSActionPerformed(evt);
            }
        });

        btnIzaberiRS.setText("Izaberi radnu smenu");
        btnIzaberiRS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzaberiRSActionPerformed(evt);
            }
        });

        jLabel1.setText("Id:");

        tblRadneSmene.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRadneSmene);

        jLabel2.setText("Naziv:");

        jLabel3.setText("Vreme od (HH:mm):");

        lblID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jLabel4.setText("Vreme do (HH:mm):");

        btnPretraga2.setText("Pretraga");
        btnPretraga2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraga2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Unesi naziv:");

        jLabel8.setText("Pretraga po nazivu");

        lblGreska.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnIzaberiRS))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(btnIzmeniRS)
                                        .addGap(34, 34, 34))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtVremeOd, javax.swing.GroupLayout.Alignment.TRAILING)))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVremeDo)))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblGreska, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(58, 58, 58)
                                .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addComponent(btnPretraga2)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(btnPretraga2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGreska, javax.swing.GroupLayout.DEFAULT_SIZE, 16, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtVremeOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtVremeDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(btnIzmeniRS)
                        .addGap(74, 74, 74)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzaberiRS)
                    .addComponent(jButton1))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private static boolean isNumeric(String str) {
        try {
            Integer.parseInt(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    private static LocalTime prebaciUVreme(String time) throws DateTimeParseException {

        // Split stringa u sat i minut
        String[] vreme = time.split(":");
        if (vreme.length != 2) {
            JOptionPane.showMessageDialog(null, "Neispravan format mora biti (HH:mm)");
            throw new DateTimeParseException("Neispravan format mora biti (HH:mm)", time, 0);
        }

        if (!isNumeric(vreme[0]) || !isNumeric(vreme[1])) {
            JOptionPane.showMessageDialog(null, "Neispravan format sati i minuti moraju biti brojevi");
            throw new DateTimeParseException("Neispravan format sati i minuti moraju biti brojevi", time, 0);
        }

        int sat = Integer.parseInt(vreme[0]);
        int minut = Integer.parseInt(vreme[1]);

        if (sat < 0 || sat > 23 || minut < 0 || minut > 59) {
            JOptionPane.showMessageDialog(null, "Neispravan unos vremena (sat mora biti od 0 do 23 a minut od 0 do 59)");
            throw new DateTimeParseException("Neispravan unos vremena (sat mora biti od 0 do 23 a minut od 0 do 59)", time, 0);
        }

        // Kreiranje LocalTime objekta
        return LocalTime.of(sat, minut);
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        popuniTabelu();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnIzmeniRSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniRSActionPerformed

        if (lblID.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Nije izabrana radna smena");
            return;
        }
        RadnaSmena rs = new RadnaSmena(Integer.parseInt(lblID.getText()), txtNaziv.getText(),
                prebaciUVreme(txtVremeOd.getText()), prebaciUVreme(txtVremeDo.getText()));

        try {

            Kontroler.getInstance().promeniRadnuSmenu(rs);

            JOptionPane.showMessageDialog(this, "Uspesno izmenjena smena");

            popuniTabelu();

            lblID.setText("");
            txtNaziv.setText("");
            txtVremeOd.setText("");
            txtVremeDo.setText("");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Neuspela promena smene");
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_btnIzmeniRSActionPerformed

    private void btnIzaberiRSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzaberiRSActionPerformed

        if (tblRadneSmene.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Nije izabrana smena iz tabele");
            return;
        }

        int red = tblRadneSmene.getSelectedRow();
        int idRs = (int) tblRadneSmene.getValueAt(red, 0);

        List<RadnaSmena> sveSmene = new ArrayList<>();

        try {
            sveSmene = Kontroler.getInstance().vratiListuSviRadnaSmena();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju liste radnih smena" + ex.getMessage());
        }

        RadnaSmena izabranaSmena = null;

        for (RadnaSmena rs : sveSmene) {
            if (rs.getIdRadnaSmena() == idRs) {
                izabranaSmena = rs;
            }
        }

        lblID.setText(String.valueOf(izabranaSmena.getIdRadnaSmena()));
        txtNaziv.setText(izabranaSmena.getNaziv());

        DateTimeFormatter vreme = DateTimeFormatter.ofPattern("HH:mm");

        txtVremeOd.setText(izabranaSmena.getVremeOd().format(vreme));
        txtVremeDo.setText(izabranaSmena.getVremeDo().format(vreme));


    }//GEN-LAST:event_btnIzaberiRSActionPerformed

    private void btnPretraga2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraga2ActionPerformed

        String pretraga = txtPretraga.getText();

        List<RadnaSmena> radneSmene = new ArrayList<>();
        try {
            radneSmene = Kontroler.getInstance().vratiListuRadnaSmena(pretraga);
            lblGreska.setText("");
            popuniTabelu(radneSmene);
        } catch (Exception ex) {
            lblGreska.setText("Nema radnih smena za uneti kriterijum");
            System.out.println("Greska kod vracanja radnih smena sa zadatim vrednostima" + ex.getMessage());
        }

        txtPretraga.setText("");
    }//GEN-LAST:event_btnPretraga2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UrediRadnaSmena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UrediRadnaSmena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UrediRadnaSmena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UrediRadnaSmena.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UrediRadnaSmena().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzaberiRS;
    private javax.swing.JButton btnIzmeniRS;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JButton btnPretraga1;
    private javax.swing.JButton btnPretraga2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGreska;
    private javax.swing.JLabel lblID;
    private javax.swing.JTable tblRadneSmene;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtPretraga;
    private javax.swing.JTextField txtVremeDo;
    private javax.swing.JTextField txtVremeOd;
    // End of variables declaration//GEN-END:variables

    private void popuniTabelu() {
        DefaultTableModel dt = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        // Postavljanje modela na tabelu
        tblRadneSmene.setModel(dt);

        dt.setColumnCount(4);
        dt.setRowCount(0);

        String[] kolone = {"Id", "Naziv", "Vreme od", "Vreme do"};
        dt.setColumnIdentifiers(kolone);

        List<RadnaSmena> sveRadneSmene;
        try {
            sveRadneSmene = Kontroler.getInstance().vratiListuSviRadnaSmena();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju radnih smena " + ex.getMessage());
            sveRadneSmene = null;
            return;
        }
        int brojac = 0;

        if (sveRadneSmene == null || sveRadneSmene.isEmpty()) {
            System.out.println("Lista radnih smena je prazna");
            return;
        }

        for (RadnaSmena radnaSmena : sveRadneSmene) {
            dt.setRowCount(brojac + 1);

            dt.setValueAt(radnaSmena.getIdRadnaSmena(), brojac, 0);
            dt.setValueAt(radnaSmena.getNaziv(), brojac, 1);
            dt.setValueAt(radnaSmena.getVremeOd(), brojac, 2);
            dt.setValueAt(radnaSmena.getVremeDo(), brojac, 3);

            brojac++;
        }

        tblRadneSmene.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblRadneSmene.setRowSelectionAllowed(true);
        tblRadneSmene.setColumnSelectionAllowed(false);
    }

    private void popuniTabelu(List<RadnaSmena> radneSmene) {
        DefaultTableModel dt = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        tblRadneSmene.setModel(dt);

        dt.setColumnCount(4);
        dt.setRowCount(0);

        String[] kolone = {"Id", "Naziv", "Vreme od", "Vreme do"};
        dt.setColumnIdentifiers(kolone);

        int brojac = 0;

        for (RadnaSmena radnaSmena : radneSmene) {
            dt.setRowCount(brojac + 1);

            dt.setValueAt(radnaSmena.getIdRadnaSmena(), brojac, 0);
            dt.setValueAt(radnaSmena.getNaziv(), brojac, 1);
            dt.setValueAt(radnaSmena.getVremeOd(), brojac, 2);
            dt.setValueAt(radnaSmena.getVremeDo(), brojac, 3);

            brojac++;
        }

        tblRadneSmene.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblRadneSmene.setRowSelectionAllowed(true);
        tblRadneSmene.setColumnSelectionAllowed(false);
    }
}
