/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domain.Radnik;
import domain.RadnaSmena;
import domain.RadnikRadnaSmena;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import kontroler.Kontroler;
import modeliTabela.TabelProizvodiModel;

/**
 *
 * @author Slobodan
 */
public class FrmRaspored extends javax.swing.JFrame {

    /**
     * Creates new form FrmRaspored
     */
    public FrmRaspored() {
        initComponents();

        setVisible(true);
        setLocationRelativeTo(null);

        lblGreska.setText("");

        popuniTabelu();
        popuniCboxeve();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblRaspored = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cboxRadnici = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cboxSmene = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        btnUbaci = new javax.swing.JButton();
        jKalendar = new com.toedter.calendar.JDateChooser();
        lblGreska = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Raspored");

        tblRaspored.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblRaspored);

        jLabel1.setText("Napravi raspored");

        jLabel2.setText("Radnik");

        jLabel3.setText("Smena");

        jLabel4.setText("Datum");

        btnUbaci.setText("Ubaci u raspored");
        btnUbaci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbaciActionPerformed(evt);
            }
        });

        lblGreska.setForeground(new java.awt.Color(255, 0, 0));
        lblGreska.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGreska.setText("jLabel5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblGreska, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboxSmene, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboxRadnici, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(46, 46, 46)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnUbaci, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                .addComponent(jKalendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboxRadnici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUbaci)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(cboxSmene, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jKalendar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblGreska)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUbaciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbaciActionPerformed

        Radnik r = (Radnik) cboxRadnici.getSelectedItem();
        RadnaSmena rs = (RadnaSmena) cboxSmene.getSelectedItem();
        Date d = jKalendar.getDate();

        if (r == null || rs == null || d == null) {
            lblGreska.setText("Moraju biti izabrani radnik, radna smena i datum!");
            return;
        }

        LocalDate datum = d.toInstant().atZone(java.time.ZoneId.systemDefault())
                .toLocalDate();

        RadnikRadnaSmena rrs = new RadnikRadnaSmena(0, r.getIdRadnik(), rs.getIdRadnaSmena(), datum);

        try {

            Kontroler.getInstance().kreirajRadnikRadnaSmena(rrs);
            JOptionPane.showMessageDialog(this, "Uspesno ubaceno u radpored");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Greska kod ubacivanja u raspored");
            System.out.println(ex.getMessage());
        }

        popuniTabelu();
        lblGreska.setText("");

    }//GEN-LAST:event_btnUbaciActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRaspored.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRaspored.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRaspored.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRaspored.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRaspored().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUbaci;
    private javax.swing.JComboBox<Radnik> cboxRadnici;
    private javax.swing.JComboBox<RadnaSmena> cboxSmene;
    private com.toedter.calendar.JDateChooser jKalendar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGreska;
    private javax.swing.JTable tblRaspored;
    // End of variables declaration//GEN-END:variables

    private void popuniCboxeve() {

        try {

            List<Radnik> radnici = Kontroler.getInstance().vratiListuSviRadnik();
            List<RadnaSmena> radneSmene = Kontroler.getInstance().vratiListuSviRadnaSmena();

            for (RadnaSmena radnaSmena : radneSmene) {
                cboxSmene.addItem(radnaSmena);
            }

            cboxSmene.setSelectedIndex(-1);

            for (Radnik radnik : radnici) {
                cboxRadnici.addItem(radnik);
            }

            cboxRadnici.setSelectedIndex(-1);

        } catch (Exception ex) {
            System.out.println("Greska kod popunjavanja comboBoxeva" + ex.getMessage());
        }

    }

    private void popuniTabelu() {

        String[] kolone = {"Id", "Radnik", "Smena", "Datum"};
        TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

        // Postavljanje modela na tabelu
        tblRaspored.setModel(dt);

        List<RadnikRadnaSmena> raspored;
        List<Radnik> sviRadnici;
        List<RadnaSmena> radneSmene;

        try {
            raspored = Kontroler.getInstance().vratiListuSviRadnikRadnaSmena();
            sviRadnici = Kontroler.getInstance().vratiListuSviRadnik();
            radneSmene = Kontroler.getInstance().vratiListuSviRadnaSmena();

        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju rasporeda " + ex.getMessage());
            raspored = null;
            return;
        }
        int brojac = 0;

        for (RadnikRadnaSmena rrs : raspored) {
            dt.setRowCount(brojac + 1);

            dt.setValueAt(rrs.getId(), brojac, 0);

            for (Radnik radnik : sviRadnici) {
                if (rrs.getIdRadnik() == radnik.getIdRadnik()) {
                    dt.setValueAt(radnik, brojac, 1);
                    break;
                }
            }

            for (RadnaSmena rs : radneSmene) {
                if (rrs.getIdRadnaSmena() == rs.getIdRadnaSmena()) {
                    dt.setValueAt(rs, brojac, 2);
                    break;
                }
            }

            DateTimeFormatter format=DateTimeFormatter.ofPattern("dd-MMM-yyyy");
            dt.setValueAt(rrs.getDatum().format(format), brojac, 3);

            brojac++;
        }

        tblRaspored.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblRaspored.setRowSelectionAllowed(true);
        tblRaspored.setColumnSelectionAllowed(false);

    }

}
