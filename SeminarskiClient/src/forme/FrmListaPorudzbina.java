/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domain.Mesto;
import domain.Musterija;
import domain.Porudzbina;
import domain.Proizvod;
import domain.StavkaPorudzbina;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import kontroler.Kontroler;
import modeliTabela.TabelProizvodiModel;

/**
 *
 * @author Slobodan
 */
public class FrmListaPorudzbina extends javax.swing.JFrame {

    /**
     * Creates new form FrmListaPorudzbina
     */
    List<Porudzbina> svePorudzbine = new ArrayList<>();
    List<Musterija> sveMusterije = new ArrayList<>();

    public FrmListaPorudzbina() {

        initComponents();

        setVisible(true);

        setLocationRelativeTo(null);

        try {
            sveMusterije = Kontroler.getInstance().vratiListuSviMusterija();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju musterija" + ex.getMessage());
        }

        popuniTabeluPorudzbina();
        osveziTabeluStavke();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPorudzbine = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNapomena = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        lblCena = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        lblIsporuka = new javax.swing.JLabel();
        lblMesto = new javax.swing.JLabel();
        btnObrisiPorudzbinu = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        btnPretraga = new javax.swing.JButton();
        btnOsveziTabelu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Spisak porudzbina");

        tblPorudzbine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPorudzbine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPorudzbineMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPorudzbine);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel1.setText("Porudzbine");

        txtNapomena.setColumns(20);
        txtNapomena.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txtNapomena.setRows(5);
        txtNapomena.setEnabled(false);
        jScrollPane2.setViewportView(txtNapomena);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Napomena");

        lblCena.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblCena.setForeground(new java.awt.Color(255, 0, 0));
        lblCena.setText("Ukupna Cena:");

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblStavke.setEnabled(false);
        jScrollPane3.setViewportView(tblStavke);

        lblIsporuka.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIsporuka.setText("Nacin isporuke: ");

        lblMesto.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMesto.setText("Lokacija:");

        btnObrisiPorudzbinu.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnObrisiPorudzbinu.setText("Obrisi porudzbinu");
        btnObrisiPorudzbinu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiPorudzbinuActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Unesi ID porudzbine");

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnPretraga.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        btnPretraga.setText("Pretrazi");
        btnPretraga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretragaActionPerformed(evt);
            }
        });

        btnOsveziTabelu.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        btnOsveziTabelu.setText("Osvezi tabelu");
        btnOsveziTabelu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOsveziTabeluActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnPretraga)
                                        .addGap(31, 31, 31))
                                    .addComponent(btnObrisiPorudzbinu)))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                            .addComponent(lblIsporuka, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblMesto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOsveziTabelu)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIsporuka)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblMesto)
                        .addGap(13, 13, 13)
                        .addComponent(lblCena))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPretraga)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisiPorudzbinu, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOsveziTabelu)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblPorudzbineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPorudzbineMouseClicked

        int red = tblPorudzbine.getSelectedRow();

        if (red == -1) {
            return;
        }

        int idPorudzbine = (int) tblPorudzbine.getValueAt(red, 0);
        int idMusterija = 0;
        String napomena = "";
        int cena = 0;
        String isporuka = "";

        for (Porudzbina p : svePorudzbine) {
            if (idPorudzbine == p.getIdPorudzbina()) {
                napomena = p.getNapomena();
                cena = p.getUkupnaCena();
                isporuka = p.getNacinIsporuke();
                idMusterija = p.getIdMusterija();
            }
        }

        lblCena.setText("Ukupna cena: " + cena);
        txtNapomena.setText(napomena);
        lblIsporuka.setText("Nacin isporuke: " + isporuka);

        if (isporuka.equals("Dostava")) {
            Musterija m = vratiMusteriju(idMusterija);
            Mesto mesto = vratiMesto(m.getIdMesto());
            lblMesto.setText("Lokacija: " + mesto);
        } else {
            lblMesto.setText("Lokacija: /");
        }

        popuniStavke(idPorudzbine);

    }//GEN-LAST:event_tblPorudzbineMouseClicked

    private void btnObrisiPorudzbinuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiPorudzbinuActionPerformed

        int red = tblPorudzbine.getSelectedRow();

        if (red == -1) {
            JOptionPane.showMessageDialog(this, "Nije izabrana porudzbina!");
            return;
        }

        int idPor = (int) tblPorudzbine.getValueAt(red, 0);

        int odgovor = JOptionPane.showConfirmDialog(
                null,
                "Brisanjem porudžbine biće obrisane i sve njene stavke.\nDa li ste sigurni da želite da nastavite?",
                "Potvrda brisanja",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );

        if (odgovor == JOptionPane.YES_OPTION) {

            try {
                Kontroler.getInstance().obrisiPorudzbina(idPor);
            } catch (Exception ex) {
                System.out.println("Greska pri brisanju porudzbine!" + ex.getMessage());
            }

            JOptionPane.showMessageDialog(this, "Uspesno obrisana porudzbina!");
            popuniTabeluPorudzbina();
            osveziTabeluStavke();

            lblIsporuka.setText("Nacin isporuke:");
            txtNapomena.setText("");
            lblMesto.setText("Lokacija:");
            lblCena.setText("Ukupna cena:");

        } else {
            JOptionPane.showMessageDialog(this, "Brisanje otkazano");
        }


    }//GEN-LAST:event_btnObrisiPorudzbinuActionPerformed

    private void btnPretragaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretragaActionPerformed

        if (txtId.getText() == "" || !txtId.getText().matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Unesi id broj!");
            return;
        }

        int idPor = Integer.parseInt(txtId.getText());

        popuniTabeluPorudzbina(idPor);

        txtId.setText("");
    }//GEN-LAST:event_btnPretragaActionPerformed

    private void btnOsveziTabeluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOsveziTabeluActionPerformed
        popuniTabeluPorudzbina();
        osveziTabeluStavke();
        lblIsporuka.setText("Nacin isporuke:");
        txtNapomena.setText("");
        lblMesto.setText("Lokacija:");
        lblCena.setText("Ukupna cena:");
    }//GEN-LAST:event_btnOsveziTabeluActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmListaPorudzbina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmListaPorudzbina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmListaPorudzbina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmListaPorudzbina.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmListaPorudzbina().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisiPorudzbinu;
    private javax.swing.JButton btnOsveziTabelu;
    private javax.swing.JButton btnPretraga;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCena;
    private javax.swing.JLabel lblIsporuka;
    private javax.swing.JLabel lblMesto;
    private javax.swing.JTable tblPorudzbine;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextArea txtNapomena;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluPorudzbina() {
        String[] kolone = {"Id", "Kupac", "Datum", "Vreme"};
        TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

        // Postavljanje modela na tabelu
        tblPorudzbine.setModel(dt);

        try {
            svePorudzbine = Kontroler.getInstance().vratiListuSviPorudzbina();
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju porudzbina " + ex.getMessage());
            svePorudzbine = null;
            return;
        }
        int brojac = 0;

        for (Porudzbina p : svePorudzbine) {
            dt.setRowCount(brojac + 1);

            dt.setValueAt(p.getIdPorudzbina(), brojac, 0);
            dt.setValueAt(vratiMusteriju(p.getIdMusterija()), brojac, 1);
            dt.setValueAt(p.getDatumVreme().toLocalDate(), brojac, 2);
            dt.setValueAt(p.getDatumVreme().toLocalTime(), brojac, 3);

            brojac++;
        }

        tblPorudzbine.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblPorudzbine.setRowSelectionAllowed(true);
        tblPorudzbine.setColumnSelectionAllowed(false);

    }

    private Musterija vratiMusteriju(int idMusterija) {

        for (Musterija m : sveMusterije) {
            if (m.getIdMusterija() == idMusterija) {
                return m;
            }
        }

        return null;
    }

    private void popuniStavke(int idPorudzbine) {

        try {

            String[] kolone = {"Rb", "Proizvod", "Kolicina", "Cena"};
            TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

            // Postavljanje modela na tabelu
            tblStavke.setModel(dt);

            List<StavkaPorudzbina> stavke;

            try {
                stavke = Kontroler.getInstance().vratiListuSviStavkePorudzbine(idPorudzbine);
            } catch (Exception ex) {
                System.out.println("Greska pri ucitavanju stavki " + ex.getMessage());
                stavke = null;
                return;
            }
            int brojac = 0;

            for (StavkaPorudzbina sp : stavke) {
                dt.setRowCount(brojac + 1);

                dt.setValueAt(sp.getRb(), brojac, 0);
                dt.setValueAt(vratiProizvod(sp.getIdProizvod()), brojac, 1);
                dt.setValueAt(sp.getKolicina(), brojac, 2);
                dt.setValueAt(sp.getCena(), brojac, 3);

                brojac++;
            }

        } catch (Exception ex) {
            System.out.println("Greska pri ucitavanju liste stavki" + ex.getMessage());
        }

    }

    private Proizvod vratiProizvod(int idProizvod) {

        try {
            List<Proizvod> proizvodi = Kontroler.getInstance().vratiListuSviProizvodi();

            for (Proizvod p : proizvodi) {
                if (idProizvod == p.getIdProizvod()) {
                    return p;
                }
            }

        } catch (Exception ex) {
            System.out.println("Greska pri ucitavnju proizvoda" + ex.getMessage());
        }

        return null;

    }

    private Mesto vratiMesto(int idMesto) {

        try {
            return Kontroler.getInstance().pretraziMesta(idMesto);
        } catch (Exception ex) {
            System.out.println("Greska pri ucitavnju mesta" + ex.getMessage());
        }

        return null;
    }

    private void osveziTabeluStavke() {
        String[] kolone = {"Rb", "Proizvod", "Kolicina", "Cena"};
        TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

        tblStavke.setModel(dt);

        int brojac = 0;

        dt.setRowCount(0);

    }

    private void popuniTabeluPorudzbina(int idPor) {
        try {
            Porudzbina p = Kontroler.getInstance().pretraziPorudzbina(idPor);

            if (p.getNacinIsporuke() == null) {
                JOptionPane.showMessageDialog(this, "Ne postoji porudzbina sa unetim id-ijem, probaj opet");
                return;
            }

            String[] kolone = {"Rb", "Proizvod", "Kolicina", "Cena"};
            TabelProizvodiModel dt = new TabelProizvodiModel(kolone);

            tblPorudzbine.setModel(dt);

            dt.setRowCount(1);

            dt.setValueAt(p.getIdPorudzbina(), 0, 0);
            dt.setValueAt(vratiMusteriju(p.getIdMusterija()), 0, 1);
            dt.setValueAt(p.getDatumVreme().toLocalDate(), 0, 2);
            dt.setValueAt(p.getDatumVreme().toLocalTime(), 0, 3);

            tblPorudzbine.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tblPorudzbine.setRowSelectionAllowed(true);
            tblPorudzbine.setColumnSelectionAllowed(false);

        } catch (Exception ex) {
            System.out.println("Neuspela pretraga mesta po idiju" + ex.getMessage());
        }
    }

}
